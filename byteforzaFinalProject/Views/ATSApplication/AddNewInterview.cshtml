@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>

<html>

<head>


	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/byteforzaFinalProject.styles.css" asp-append-version="true" />
	<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
	<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/font-awesome.min.css">
	<style>
		.wrapper{
		 margin: auto;
		  width: 100%;
		  max-width: 550px;
		  background: rgba(231, 239, 248, 0.8);
		  padding: 30px;
		  border-radius: 5px;
		}

		.wrapper .title h1{
		  color: #131313;
		  text-align: center;
		  margin-bottom: 25px;
		}
		textarea 
		{
			border: none;
			outline: none;
		}
		input
		{
			border: none;
			outline: none;
		}
		select
		{
			border: none;
			outline: none;
		}
		.input-fields{
		  display: flex;
		  flex-direction: column;
		  margin-right: 4%;
		}

		.input-fields,
		.msg{
		  width: 68%;
		}
		input:active,
		textarea:active{
			border: none;
			outline: none;
		}
		.input-fields .input,
		.msg textarea{
		  margin: 10px 0;
		  backginterviewType: #fff;
		  border: 0px;
		  border-bottom: 2px solid #1e1e1e;
		  padding: 10px;
		  color: #29292a;
		  width: 100%;
		}

		.msg textarea{
		  height: 212px;
		}

		::-webkit-input-placeholder {
		  /* Chrome/Opera/Safari */
		  color: #212121;
		}
		:-ms-input-placeholder {
		  /* IE 10+ */
		  color: #37393a;
		}

		.btn {
			background-color: #39b7dd;
			text-align: center;
			padding: 10px;
			border-radius: 20px;
			color: #2a2929;
			cursor: pointer;
			text-transform: uppercase;
			width: auto;
		}
		.buttons-section
		{
			display: flex;
			justify-content: space-between;
		}

		@@media screen and (max-width: 600px){
		  .contact-form{
			flex-direction: column;
		  }
		  .msg textarea{
			height: 80px;
		  }
		  .input-fields,
		  .msg{
			width: 100%;
		  }
		}
		.autocomplete {
		  position: relative;
		  display: inline-block;

		}

		input {
		  border: 1px solid transparent;
		  backginterviewType-color: #f1f1f1;
		  padding: 10px;
		  font-size: 16px;
		}

		input[type=text] {
		  backginterviewType-color: #f1f1f1;
		  width: 100%;
		}

		input[type=submit] {
		  backginterviewType-color: DodgerBlue;
		  color: #fff;
		  cursor: pointer;
		}

		input[type=submit]:hover {
		  backginterviewType-color: green;
		}

		.autocomplete-items {
		  position: absolute;
		  border: 1px solid #d4d4d4;
		  background-color : #fff;
		  overflow-y: scroll;
		  max-height: 600px;
		  border-bottom: none;
		  border-top: none;
		  z-index: 99;
		  left: 0;
		  right: 0;
		}

		.autocomplete-items div {
		  padding: 10px;
		  cursor: pointer;
		  backginterviewType-color: #fff;
		  border-bottom: 1px solid #d4d4d4;
		}

		/*when hovering an item:*/
		.autocomplete-items div:hover {
		  backginterviewType-color: #e9e9e9;
		}

		/*when navigating through the items using the arrow keys:*/
		.autocomplete-active {
		  backginterviewType-color: DodgerBlue !important;
		  color: #ffffff;
		}
</style>
</head>

<body>

	<div class="wrapper">
		<div class="wrapper">
			<div class="title">
			  <h1>Schelude Interview</h1>
			</div>
			<div class="contact-form">
			  <div class="input-fields">
				<label><strong>select the job in below field</strong></label>
				<div class="autocomplete" style="width:300px;">
					<input id="myInput" class="input" type="text" Name="clgName" placeholder="start type the job Name" >
				</div>
				<input class = "input" placeholder="Interview Panel" id = "interviewPanel">
				<br>
				<label>Interview Date and Time</label>
				<input type = "datetime-local"class =  "input" id = "datatime" >
				<div class="buttons-section">
						<div class="btn" id="cancelButton" onclick="location.href = '@Url.Action("CandidateDetail","ATSApplication")'">cancel</div>
					<div class="btn" id="btnqrt">Add</div>

				</div>
			</div>
		</div>
	
			
		
		<script>
			jQuery(document).ready(function(){
				





				jQuery.ajax({
				url: '@Url.Action("ScheduleInterviewList", "ATSApplication")',
				type: "GET",
				dataType: "json",
				contentType: "application/json; charset=utf-8",
				success: function (data) {




							var jobId11, candidate_Id, type_of_round;
							var candidateList = data;
							function autocomplete(inp, arr) {
								var currentFocus;
								inp.addEventListener("input", function (e) {
									console.log(arr);
									console.log(arr.length);
									var a, b, i, val = this.value;
									closeAllLists();
									if (!val) { return false; }
									currentFocus = -1;
									a = document.createElement("DIV");
									a.setAttribute("id", this.id + "autocomplete-list");
									a.setAttribute("class", "autocomplete-items");
									this.parentNode.appendChild(a);

									for (i = 0; i < arr.length; i++) {
										console.log(arr);
										console.log(typeof arr[i].name);
										console.log(typeof arr[i].jobName);
										console.log(typeof arr[i].candidateId);
										console.log(typeof arr[i].interviewType);
										console.log(arr[i].jobId);
										
										if ((arr[i].name != null) && (arr[i].name.substr(0, val.length).toUpperCase() == val.toUpperCase())) {

											b = document.createElement("DIV");
											b.innerHTML = arr[i].candidateId + " ";
											b.innerHTML += "<strong>" + (arr[i].name.substr(0, val.length)) + "</strong>";
											b.innerHTML += arr[i].name.substr(val.length) + " ";
											b.innerHTML += arr[i].jobName + " ";
											b.innerHTML += arr[i].interviewType;
											b.innerHTML += "<input type='hidden' value='" + arr[i].candidateId + " " + arr[i].name + " " + arr[i].interviewType + "'" + " data-jobid = " + arr[i].jobId + " data-candid = " + arr[i].candidateId + " data-typeofround = " + arr[i].interviewType + "> ";
											b.addEventListener("click", function (e) {
												console.log(e);
												inp.value = this.getElementsByTagName("input")[0].value;
												v = this.getElementsByTagName("input")[0];
												jobId11 = v.dataset.jobid;
												candidate_Id = v.dataset.candid;
												type_of_round = v.dataset.typeofround;
												console.log(jobId11);
												console.log(candidate_Id) ;
												console.log(type_of_round);

												closeAllLists();
											});
											a.appendChild(b);
										}
										else if (("" + arr[i].candidateId).substr(0, val.length).toUpperCase() == val.toUpperCase()) {

											b = document.createElement("DIV");
											b.innerHTML = "<strong>" + (("" + arr[i].candidateId).substr(0, val.length)) + "</strong>";
											b.innerHTML += ("" + arr[i].candidateId).substr(val.length) + " ";
											b.innerHTML += arr[i].name + " ";
											b.innerHTML += arr[i].jobName + " ";
											b.innerHTML += arr[i].interviewType;
											b.innerHTML += "<input type='hidden' value='" + arr[i].candidateId + " " + arr[i].name + " " + arr[i].interviewType + "'" + " data-jobid = " + arr[i].jobId + "  data-candid = " + arr[i].candidateId + "  data-typeofround = " + arr[i].interviewType + "> ";
											b.addEventListener("click", function (e) {
												inp.value = this.getElementsByTagName("input")[0].value;
												v = this.getElementsByTagName("input")[0];
												jobId11 = v.dataset.jobid;
												candidate_Id = v.dataset.candid;
												type_of_round = v.dataset.typeofround;
												console.log(jobId11);
												console.log(candidate_Id);
												console.log(type_of_round);
												closeAllLists();
											});
											a.appendChild(b);
										}
										else if ((arr[i].Name != null) && ( arr[i].interviewType).substr(0, val.length).toUpperCase() == val.toUpperCase()) {

											b = document.createElement("DIV");
											b.innerHTML = arr[i].candidateId + " ";
											b.innerHTML += arr[i].name + " ";
											b.innerHTML += arr[i].jobName + " ";
											b.innerHTML += "<strong>" + (arr[i].interviewType.substr(0, val.length)) + "</strong>";
											b.innerHTML += arr[i].interviewType.substr(val.length) + " ";
											b.innerHTML += "<input type='hidden' value='" + arr[i].candidateId + " " + arr[i].name + " " + arr[i].interviewType + "'" + " data-jobid = " + arr[i].jobId + " data-candid = " + arr[i].candidateId + " data-typeofround = " + arr[i].interviewType + "> ";
											b.addEventListener("click", function (e) {
												inp.value = this.getElementsByTagName("input")[0].value;
												v = this.getElementsByTagName("input")[0];
												jobId11 = v.dataset.jobid;
												candidate_Id = v.dataset.candid;
												type_of_round = v.dataset.typeofround;
												console.log(jobId11);
												console.log(candidate_Id);
												console.log(type_of_round);
												closeAllLists();
											});
											a.appendChild(b);
										}
										else if ((arr[i].name != null) && (arr[i].jobName).substr(0, val.length).toUpperCase() == val.toUpperCase()) {

											b = document.createElement("DIV");
											b.innerHTML = arr[i].candidateId + " ";
											b.innerHTML += arr[i].name + " ";
											b.innerHTML += "<strong>" + (arr[i].jobName.substr(0, val.length)) + "</strong>";
											b.innerHTML += arr[i].jobName.substr(val.length) + " ";
											b.innerHTML += arr[i].interviewType; 
											b.innerHTML += "<input type='hidden' value='" + arr[i].candidateId + " " + arr[i].name + " " + arr[i].interviewType + "'" + " data-jobid = " + arr[i].jobId + " data-candid = " + arr[i].candidateId + " data-typeofround = " + arr[i].interviewType + "> ";
											b.addEventListener("click", function (e) {
												inp.value = this.getElementsByTagName("input")[0].value;
												v = this.getElementsByTagName("input")[0];
												jobId11 = v.dataset.jobid;
												candidate_Id = v.dataset.candid;
												type_of_round = v.dataset.typeofround;
												console.log(jobId11);
												console.log(candidate_Id);
												console.log(type_of_round);
												closeAllLists();
											});
											a.appendChild(b);
										}
									}
								});

								inp.addEventListener("keydown", function (e) {
									var x = document.getElementById(this.id + "autocomplete-list");
									console.log(" 1  " + x);
									if (x) x = x.getElementsByTagName("div");
									if (e.keyCode == 40) {
										currentFocus++;
										addActive(x);
									} else if (e.keyCode == 38) {
										currentFocus--;
										addActive(x);
									} else if (e.keyCode == 13) {
										e.preventDefault();
										if (currentFocus > -1) {
											if (x) x[currentFocus].click();
										}
									}
								});
								function addActive(x) {

									if (!x) return false;
									removeActive(x);
									if (currentFocus >= x.length) currentFocus = 0;
									if (currentFocus < 0) currentFocus = (x.length - 1);
									x[currentFocus].classList.add("autocomplete-active");
								}
								function removeActive(x) {
									for (var i = 0; i < x.length; i++) {
										x[i].classList.remove("autocomplete-active");
									}
								}
								function closeAllLists(elmnt) {
									var x = document.getElementsByClassName("autocomplete-items");
									for (var i = 0; i < x.length; i++) {
										if (elmnt != x[i] && elmnt != inp) {
											x[i].parentNode.removeChild(x[i]);
										}
									}
								}
								document.addEventListener("click", function (e) {
									closeAllLists(e.target);
								});
							}


							autocomplete(document.getElementById("myInput"), candidateList);

							jQuery("#btnqrt").click(function () {
								console.log(jobId11);
								console.log(candidate_Id);
								var dataset =  new FormData;
								dataset.append("InterviewPanel", jQuery("#interviewPanel").val());
								dataset.append("dateTime", jQuery("#datatime").val());
								dataset.append("jobId", jobId11);
								dataset.append("candidateId", candidate_Id);
								dataset.append("type_of_round", type_of_round);
								console.log(dataset.InterviewPanel);
								console.log(dataset.dateTime);
								console.log(dataset.jobId);
								console.log(dataset.candidateId);
								console.log(dataset.type_of_round);
								jQuery.ajax({
									type: "POST",
									url: '@Url.Action("AddNewInterviewDetails", "ATSApplication")',
									data: dataset,
									dataType: 'json',
									contentType: false,
									processData: false,
									beforeSend: function () {
										jQuery("#btnqrt").hide();
										jQuery("#cancelButton").hide();
									},
									success: function (data) {

										console.log("data received successfully");
										window.location.href = '@Url.Action("ReportPage")';
									},
									error: function (error) {
										console.log(error);
									}
								});

							});





					
					console.log(data.length);
					console.log(data);
					console.log("data received successfully");
				},
				error: function (error) {
					console.log(error);
				}
			});


			});
		</script>
		
	</div>
	<script>
	</script>

</body>


</html>